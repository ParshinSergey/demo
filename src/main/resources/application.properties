spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.properties.hibernate.default_batch_fetch_size=20

# --- for external DataBase ---
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

spring.datasource.url=jdbc:mysql://localhost:3306/springweb
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.data.rest.base-path=/api
spring.data.rest.return-body-on-create=true

# spring.security.user.name=user
# spring.security.user.password=password
# spring.security.user.roles=USER

# spring.main.allow-circular-references=true

logging.level.root=WARN
logging.level.com.example.demo=DEBUG
# logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n
# logging.pattern.console=%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n

# From tutorial letscode
#security.oauth2.client.clientId=909849482463-m7lbs627ehjsvpp8pf6uqqjbu7l44roi.apps.googleusercontent.com
#security.oauth2.client.clientSecret=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
#security.oauth2.client.clientAuthenticationScheme=form
#security.oauth2.client.scope=openid,email,profile
#security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
#security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
#security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
#security.oauth2.resource.preferTokenInfo=true

#server.port=9000

#spring.security.oauth2.client.registration.google.client-id=909849482463-m7lbs627ehjsvpp8pf6uqqjbu7l44roi.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=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

